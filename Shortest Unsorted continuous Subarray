class Solution {
    public int findUnsortedSubarray(int[] nums) {
        int n=nums.length;
        PriorityQueue<Integer> stEnd = new PriorityQueue<Integer>(Collections.reverseOrder());
        stEnd.add(nums[0]);
        int endIdx = -1;
        for(int i=1; i<n; i++){
            if(stEnd.peek()>nums[i]){
                endIdx=i;
            }
            stEnd.add(nums[i]);
        }

        PriorityQueue<Integer> stStrt = new PriorityQueue<Integer>();
        stStrt.add(nums[n-1]);
        int startIdx=-1;
        for(int j=n-1; j>=0; j--){
            if(stStrt.peek()<nums[j]){
                startIdx=j;
            }
            stStrt.add(nums[j]);

        }

        if(endIdx==-1 && startIdx==-1) return 0;
        return endIdx-startIdx+1;
    }
}
