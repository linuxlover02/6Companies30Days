class Solution {
    public List<Integer> getAllElements(TreeNode root1, TreeNode root2) {
        Stack<TreeNode> st1 = new Stack<>();
        Stack<TreeNode> st2 = new Stack<>();
        List<Integer> ans = new ArrayList<>();
        while(root1!=null || root2!=null || !st1.isEmpty() || !st2.isEmpty()){
            while(root1!=null){
                st1.push(root1);
                root1=root1.left;
            }

            while(root2!=null){
                st2.push(root2);
                root2=root2.left;
            }

            if(st2.isEmpty() || (!st1.isEmpty() && st1.peek().val<=st2.peek().val )){
                TreeNode cur = st1.pop();
                ans.add(cur.val);
                root1=cur.right;                
            }else{
                TreeNode cur = st2.pop();
                ans.add(cur.val);
                root2=cur.right;
            }
        }

        return ans;
    }
}
