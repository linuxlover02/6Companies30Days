/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    class Pair{
        int no;
        int sum;
        Pair(int no, int sum){
            this.no=no; this.sum=sum;
        }
    }

    public int averageOfSubtree(TreeNode root) {
        int ans[] = {0};
        helper(root,ans);        
        return ans[0];
    }

    public Pair helper(TreeNode root, int ans[]){
        if(root==null) return new Pair(0,0);
        Pair left = helper(root.left,ans);
        Pair right = helper(root.right,ans);
        int total = root.val+left.sum+right.sum;
        int nodes = 1+left.no+right.no;
        if((total/nodes)==root.val){
            ans[0]++;
        }
        return new Pair(nodes,total);
    }
}
