class Solution {
    public boolean isPossible(int[] nums) {
        HashMap<Integer,Integer> avail = new HashMap<>();
        for(int val: nums){
            avail.put(val,avail.getOrDefault(val,0)+1);
        }

        HashMap<Integer,Integer> vac = new HashMap<>();
        for(int i=0; i<nums.length; i++){
            int num = nums[i];
            if(avail.containsKey(num)){
                if(vac.containsKey(num)){
                    vac.put(num,vac.get(num)-1);
                    if(vac.get(num)==0) vac.remove(num);
                    vac.put(num+1,vac.getOrDefault(num+1,0)+1);
                    avail.put(num,avail.get(num)-1);
                    if(avail.get(num)==0) avail.remove(num);
                }else{
                    for(int j=0; j<=2; j++){
                        if(avail.containsKey(num+j)){
                            avail.put(num+j,avail.get(num+j)-1);
                            if(avail.get(num+j)==0) avail.remove(num+j);
                        }else{
                            return false;
                        }
                    }
                    vac.put(num+3,vac.getOrDefault(num+3,0)+1);
                }
            }            
        }
        System.out.println(avail.size());
        return avail.size()==0;
    }
}
